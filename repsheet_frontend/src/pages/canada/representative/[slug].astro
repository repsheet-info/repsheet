---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import db from '../../../utils/db';
import { assertIsMember } from '../../../types/guards';
import type { Member } from '../../../types/db';
import { makeMemberSlug } from '../../../utils/slug';
import PartyBadge from '../../../components/PartyBadge.astro';
import { memberTitle } from '../../../utils/member-title';
// Get the slug from the URL
const { slug } = Astro.params;

const [firstName, lastName] = slug!.split('_');
const member = db.prepare('SELECT * FROM members WHERE LOWER("First Name") = LOWER(?) AND LOWER("Last Name") = LOWER(?)').get(firstName, lastName);

assertIsMember(member);

// For now, just display the slug as the name
// In the future, this will be replaced with actual data from a database or API
const name = memberTitle(member);

export function getStaticPaths() {
  const allMembers: Member[] = db.prepare('SELECT * FROM members').all();

  return allMembers.map((rep) => ({
    params: { slug: makeMemberSlug(rep) },
  }));
}

---

<StarlightPage frontmatter={{ title: name, description: member.Constituency, banner: {content: "We're still working on this!"} }}>
  <PartyBadge party={member['Political Affiliation']} />
  Representing {member.Constituency} in {member['Province / Territory']}
</StarlightPage>