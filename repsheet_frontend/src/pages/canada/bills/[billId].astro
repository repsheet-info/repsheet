---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import IssueSummary from '../../../components/IssueSummary.astro';
import db from '../../../utils/db';
import { assertIsBill, assertIsBillSummary } from '../../../types/guards';
import type { Bill, BillSummary } from '../../../types/db';
import { issueName } from '../../../utils/issue-name';
import Issues from '../../../components/Issues.astro';

// Get the slug from the URL
const { billId } = Astro.params;

const bill = db.prepare('SELECT * FROM bills WHERE LOWER("Bill ID") = LOWER(?)').get(billId);

assertIsBill(bill);

let summary: BillSummary | null = null;
if (bill.Summary) {
  summary = JSON.parse(bill.Summary.replace('undefined', 'null'));
  assertIsBillSummary(summary);

}


export function getStaticPaths() {
  const allBills: Bill[] = db.prepare('SELECT * FROM bills').all();

  return allBills.map((bill) => ({
    params: { billId: bill["Bill ID"] },
  }));
}

const title = bill["Bill Number"]
const subtitle = bill["Short Title"]

const longTitle = bill["Long Title"]
const firstReadingDate = bill["First Reading Date"] ? new Date(bill["First Reading Date"]).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' }) : null
const parliament = bill["Parliament"]
const session = bill["Session"]
const link  = bill['Bill External URL']
const billType = bill["Bill Type"]

---

<StarlightPage frontmatter={{ title, subtitle }}>
  <h2>Details</h2>
  <dl>
    <dt>Full Title</dt>
    <dd>{longTitle}</dd>
    <dt>First Reading</dt>
    <dd>{firstReadingDate}, Parliament {parliament}, Session {session}</dd>
    <dt>Type</dt>
    <dd>{billType}</dd>
    <dt>Full Content</dt>
    <dd><a href={link} target="_blank" rel="noopener noreferrer">{link}</a></dd>
  </dl>
  <h2>Summary</h2>
  {summary?.summary.split("\n").map((line) => <p>{line}</p>)}

  <Issues issues={summary?.issues}>
    <p slot="no-issues">This bill was not summarized into specific issues.</p>
  </Issues>
</StarlightPage>
