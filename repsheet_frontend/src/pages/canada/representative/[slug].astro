---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import db from '../../../utils/db';
import { assertIsMember } from '../../../types/guards';
import type { Member } from '../../../types/db';
import { makeMemberSlug } from '../../../utils/slug';
import PartyBadge from '../../../components/PartyBadge.astro';
import { memberTitle } from '../../../utils/member-title';
import FormattedSummary from '../../../components/FormattedSummary.astro';
import Issues from '../../../components/Issues.astro';
import IssueSummary from '../../../components/IssueSummary.astro';

// Get the slug from the URL
const { slug } = Astro.params;

const [firstName, lastName] = slug!.split('_');
const member = db.prepare('SELECT * FROM members WHERE LOWER("First Name") = LOWER(?) AND LOWER("Last Name") = LOWER(?)').get(firstName, lastName);

assertIsMember(member);

// For now, just display the slug as the name
// In the future, this will be replaced with actual data from a database or API
const name = memberTitle(member);

export function getStaticPaths() {
  const allMembers: Member[] = db.prepare('SELECT * FROM members').all();

  return allMembers.map((rep) => ({
    params: { slug: makeMemberSlug(rep) },
  }));
}

const {summary, issues} = member.Summary != null ? JSON.parse(member.Summary) : {};

const constituency = member.Constituency;
const province = member['Province / Territory'];


---

<StarlightPage frontmatter={{ title: name, description: member.Constituency}} >
  <PartyBadge party={member['Political Affiliation']} />
  <br />
  <dl>
    <dt>Current constituency</dt> 
    <dd>{constituency}</dd>
    <dt>Province / Territory</dt>
    <dd>{province}</dd>
  </dl>
  {summary && <FormattedSummary summary={summary} />}
  
  <Issues issues={issues}>
    <p slot="no-issues">This representative was not summarized into specific issues.</p>
  </Issues>
</StarlightPage>